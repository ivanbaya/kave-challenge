import Head from 'next/head'
import Link from 'next/link'
import React from "react";
import dynamic from "next/dynamic";
import { useMediaQuery } from 'react-responsive';

const Header = dynamic(() => import("./header"));
let ItemsFav = dynamic(() => import("./items-favoritos"));
let Items= dynamic(() => import("./items"));

let pagina = 0;
let paginas = [];
let numProductos = 11;

export default function ListaProductos(countProductes, Tipo) {
  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });
  if (isMobile){
    numProductos = 5;
  }else{
    numProductos = 12;
  }
  Pagina(pagina)
  function Pagina(num) {
    paginas.splice(0,paginas.length);
    let firstNumber = num-3;
    let numeroPaginas = 8;
    if(firstNumber > countProductes.countProductes/numProductos-7){
      firstNumber = Math.round(countProductes.countProductes/numProductos-7);
    }
    if(firstNumber < 1){
      firstNumber = 1;
    }
    if(countProductes.countProductes/numProductos < 8){
        numeroPaginas = Math.ceil(countProductes.countProductes/numProductos);
    }
    for(var i = firstNumber; i<firstNumber+numeroPaginas;i++){
      paginas.push(i);
    }
    return pagina = num;
  }

  function Check(num){
    if(num == pagina){
      return 'active';
    }else{
      return '';
    }
  }

  function CheckArrow(direccion){
    if(direccion == 'right'){
      if(pagina>countProductes.countProductes/numProductos-5){
        return 'invisible'
      }else{
        return '';
      }
    }else if(direccion == 'left'){
      if(pagina<5){
        return 'invisible'
      }else{
        return '';
      }
    }
  }  
    return (
      <>
        <Head>
          <title>KaveHome.com - Muebles y decoraci√≥n | Kave Home</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.png" />
        </Head>
  
        <main>
          <Header/>
          <div class="center-div">
            <h2>{countProductes.Tipo}</h2>
            <h3>Lorem ipsum dolor sit amet</h3>
          </div>
          {countProductes.Tipo == "Lista de Favoritos" ? (
            <ItemsFav min={pagina*numProductos} max={pagina*numProductos+numProductos-1}/>)
            : (<Items min={pagina*numProductos} max={pagina*numProductos+numProductos-1}/>)}
          
        </main>
        <footer>
          <Link href={''}><a onClick={()=>Pagina(pagina-1)} class={CheckArrow('left')}>&lsaquo;</a></Link>
          {paginas.map(pages=> (
              <Link href={''}><a onClick={()=>Pagina(pages-1)} class={Check(pages-1)}>{pages}</a></Link>
            ))}
          <Link href={''}><a onClick={()=>Pagina(pagina+1)} class={CheckArrow('right')}>&rsaquo;</a></Link>
        </footer>
      </>
    )
  }